// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package frc.robot.subsystems;

import frc.robot.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.CounterBase.EncodingType;

import com.ctre.phoenix.motorcontrol.ControlMode;
import com.ctre.phoenix.motorcontrol.can.TalonSRX;

import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.PIDSourceType;
import edu.wpi.first.wpilibj.PWMTalonSRX;
import edu.wpi.first.wpilibj.SpeedController;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class ArmLiftSub extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
private TalonSRX tal7;
private TalonSRX tal9;
private Encoder liftEncoder;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public ArmLiftSub() {

        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
tal7 = new TalonSRX(7); 
//addChild("Tal7",tal7);
tal7.setInverted(false);
tal7.configContinuousCurrentLimit(33);
tal7.configPeakCurrentLimit(33);


// tal8 = new TalonSRX(8); 
// //addChild("Tal7",tal7);
// tal8.setInverted(false);
// tal8.configContinuousCurrentLimit(33);
// tal8.configPeakCurrentLimit(33);
tal9 = new TalonSRX(9); 
//addChild("Tal7",tal7);
tal9.setInverted(false);
tal9.configContinuousCurrentLimit(33);
tal9.configPeakCurrentLimit(33);
        
liftEncoder = new Encoder(0, 1, false, EncodingType.k4X);
addChild("liftEncoder",liftEncoder);
liftEncoder.setDistancePerPulse(1.0);
liftEncoder.setPIDSourceType(PIDSourceType.kRate);
        

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    public PIDSource getliftEncoder() {
        return liftEncoder;

    }
    public void resetLiftEncoder(){
        liftEncoder.reset();
    }
    public double getliftEncoderValue(){
        return liftEncoder.getDistance();
    }

    // public PIDOutput getTal7() {
    //     return tal7;

    // } 
    public void setArmLift(double power){
        tal7.set(ControlMode.PercentOutput, power);
        tal9.set(ControlMode.PercentOutput, power);
    }

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

